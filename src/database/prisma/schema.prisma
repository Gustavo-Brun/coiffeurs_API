// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // # SUPABASE > Direct connection to the database. Used for migrations
}

model Providers {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  whatsappNumber String    @unique
  createdAt      DateTime  @default(now())
  updatedAt      DateTime?

  clients Clients[]
  queue   Queues?
}

model Clients {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  whatsappNumber String?   @unique
  createdAt      DateTime  @default(now())
  updatedAt      DateTime?

  provider   Providers @relation(fields: [providerId], references: [id])
  providerId Int

  queueEntries QueueEntry[]
}

model Queues {
  id         String    @id @default(cuid())
  provider   Providers @relation(fields: [providerId], references: [id])
  providerId Int       @unique

  entries QueueEntry[]
}

enum QueueEntryStatus {
  WAITING
  COMPLETED
  REMOVED
}

model QueueEntry {
  id       Int              @id @default(autoincrement())
  order    Int
  joinedAt DateTime         @default(now())
  status   QueueEntryStatus @default(WAITING)

  client   Clients @relation(fields: [clientId], references: [id])
  clientId Int
  note     String?

  queue   Queues @relation(fields: [queueId], references: [id])
  queueId String

  // RAW SQL MIGRATION - queue_entry_add_partial_unique_indexes //

  //  -- Add a unique index combination queueId and order, ONLY where the status is 'WAITING'
  // CREATE UNIQUE INDEX "QueueEntry_queueId_order_waiting_unique" ON "QueueEntry"("queueId", "order") WHERE status = 'WAITING';

  // -- Add a unique index combination queueId and clientId, ONLY where the status is 'WAITING'
  // CREATE UNIQUE INDEX "QueueEntry_queueId_clientId_waiting_unique" ON "QueueEntry"("queueId", "clientId") WHERE status = 'WAITING';
}
